---
title: "程序员进阶的过程——《Why Learning to Code is So Damn Hard》读后感"
date: 2015-05-19 17:00
categories:
slug: why-coder-so-hard
---

在上一篇文章中，我提到了搜索是程序员的核心能力。但是，知道怎么搜和搜什么，
以及在搜出来的答案中快速排查和进一步获取信息，这些能力是怎么得来的呢？

这篇[Why Learning to Code is So Damn Hard](http://www.vikingcodeschool.com/posts/why-learning-to-code-is-so-damn-hard)
（[中文版：为什么成为一名程序员这么难？](http://www.freebuf.com/articles/others-articles/68711.html)）
分析了这个过程，并且侧重于程序员在成长道路上遇到的困难，原文说的已经非常好了。

对于我来说，从文章中收获到的一个信息是“资料密度”的概念。它说的是在你成长的不同阶段，相应水平的知识资料的数量是不一样的。
这里的资料可以是书籍、博客、视频、网站、demo、问答网站、论坛等等。
在新手阶段，入门性质的资料数量是最多的，在这个层次，有能力提供知识的人数也最多。
其次是从新手到中等水平的资料，市面上大部分的书籍处于这一水平，最典型的是《Think in Java》这类。
这里并不是说书籍的作者水平低，而是说就书籍的内容而言，属于中等而非深层知识。

再往上，从中低层升上中高层、从中层升上高层，资料就急剧减少了。甚至基本没有。究其原因：

第一，高手本来就少，细分到具体的领域就更少了。
并且高手也就实在他自己的领域、以及相关领域是高手，在其他细分领域，也就是中等或者中等偏上。
高手的表达能力也不见得会很好，你让他自己做一件事情可能对他来说很容易，让他教导别人也掌握同样水平的技能就很难了。
也就是说，有能力写出中高层水平资料的人就很少。有的人，也许他的水平不错，但是表达能力不行，说出来的东西让人不知所云。

第二，即便是有这样的高手写出了这样的知识资料，它的帮助也是有限的。程序员在从中低手成长为中高手这个过程，
需要大量的实践练习和亲身的感悟体会。不是单靠获取外部资料就能够成长的。
每个人成长的又有他自己独特的成长历程。高手最多是把他自己成长中的心得体会表达出来，以及一些走过的弯路和经验教训。
但是这样的资料，提供的只能是辅助性的作用。不管什么样的高手写的书也替代不了你自己的实践积累。

如果你继续进步，对某一领域真正有了自己的理解和自信，算得上一个专业人士了，这时候资料反而多一些了。
因为，高手写给与他同样水平的人看的东西，不需要考虑读者的接受性，考虑读者是否易读，能否看得懂他的东西，
他只需要简单的把他知道的东西写出来就行了。
而作为高手的你，阅读资料的时候，寻找的不是方法论的东西，而是纯粹的信息和事实。这样的资料典型例子是顶级期刊和会议的科技论文。

我自己也这样同样的感受，从大一有了自己的电脑之后，从折腾硬件开始，经过十几年的艰难历程，终于在最近两年对整个体系有了一种融会贯通的感觉。
这并不是说你对每一个细分领域的细节都了若指掌，而是，对于整个体系相关的大部分东西，你自己心里知道，只要你想搞就能搞。
这有点像，好比你住在一个城市住久了，整个城市的结构、人文风貌你都已经非常熟悉了，大部分地名你总归会听说过，也知道大概在哪。
虽然整个城市的大部分角落你其实没有去过，但是你自己却知道，不管要去哪个角落其实都不难。这与你新到一个城市的感觉是完全不同的。